# Copyright 2019 YugaByte, Inc. and Contributors
#
# Licensed under the Polyform Free Trial License 1.0.0 (the "License"); you
# may not use this file except in compliance with the License. You
# may obtain a copy of the License at
#
# https://github.com/YugaByte/yugabyte-db/blob/master/licenses/POLYFORM-FREE-TRIAL-LICENSE-1.0.0.txt

- assert:
    that:
      - yb_process_type is defined
      - user_name is defined
      - placement_cloud is defined
      - placement_region is defined
      - placement_zone is defined
      - instance_type is defined
      - mount_points is defined

- name: Setup | Create config directory for {{ yb_process_type }}
  file:
    path: "{{ yb_conf_dir }}"
    state: directory
    mode: 0755
    owner: "{{ user_name }}"
    group: "{{ user_name }}"

- name: Setup | Create bin directory for {{ user_name }}
  file:
    path: "{{ yb_bin_dir }}"
    state: directory
    mode: 0755
    owner: "{{ user_name }}"
    group: "{{ user_name }}"

- set_fact:
    _mount_points: "{{ mount_points.split(',') }}"

- set_fact:
    mount_logs_dir: "{{ _mount_points[0] }}/yb-data/{{ yb_process_type }}/logs"
    mount_cores_dir: "{{ _mount_points[0] }}/cores"

- name: Setup | Create {{ yb_process_type }} logs directory
  file:
    path: "{{ mount_logs_dir }}"
    state: directory
    mode: 0755
    owner: "{{ user_name }}"
    group: "{{ user_name }}"

- name: Setup | Symlink {{ yb_process_type }} logs directory
  file:
    src: "{{ mount_logs_dir }}"
    dest: "{{ yb_logs_dir }}"
    mode: 0755
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    state: link

- name: Configure | Remove {{ yb_process_type }} gflags
  file:
    path: "{{ yb_conf_file }}"
    state: absent
  when: replace_gflags is defined

- set_fact:
    _gflags: "{{ common_gflags | combine(process_specific_gflags[yb_process_type]) }}"

- set_fact:
    _gflags: "{{ _gflags | combine(dict(extra_gflags)) }}"
  when: extra_gflags is defined

- name: Configure | Set {{ yb_process_type }} gflags
  lineinfile:
    dest: "{{ yb_conf_file }}"
    regexp: "^--{{ item.key }}=(.*)"
    line: "--{{item.key}}={{item.value}}"
    create: yes
  with_dict: "{{ gflags | default(_gflags) }}"

- name: Configure | Delete {{ yb_process_type }} gflags
  lineinfile:
    dest: "{{ yb_conf_file }}"
    regexp: "^--{{ item }}=(.*)"
    state: absent
  with_items: "{{ gflags_to_remove }}"
  when: gflags_to_remove is defined

- name: Configure | Add yb server ctl script
  vars:
    mount_paths: "{{ _mount_points | join(' ') }}"
  template:
    src: yb-server-ctl.sh.j2
    dest: "{{ yb_bin_dir }}/yb-server-ctl.sh"
    owner: "{{ user_name }}"
    mode: 0755

- name: Setup | Create directory to land core dumps
  file:
    path: "{{ mount_cores_dir }}"
    state: directory
    mode: 0755
    owner: "{{ user_name }}"
    group: "{{ user_name }}"

- name: Setup | Symlink cores directory to {{ user_name }} home directory
  file:
    src: "{{ mount_cores_dir }}"
    dest: "{{ yb_cores_dir }}"
    mode: 0755
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    state: link

- name: Configure | Add clean_cores script
  template:
    src: clean_cores.sh.j2
    dest: "{{ yb_bin_dir }}/clean_cores.sh"
    owner: "{{ user_name }}"
    mode: 0755

- name: Configure | Add purge logs script
  template:
    src: zip_purge_yb_logs.sh.j2
    dest: "{{ yb_bin_dir }}/zip_purge_yb_logs.sh"
    owner: "{{ user_name }}"
    mode: 0755

- name: Setup cron to cleanup core files.
  cron:
    name: "cleanup core files hourly"
    minute: "0"
    user: "{{ user_name }}"
    job: "{{ yb_bin_dir }}/clean_cores.sh"

- name: Setup cron to cleanup log files.
  cron:
    name: "cleanup yb log files hourly"
    minute: "5"
    user: "{{ user_name }}"
    job: "{{ yb_bin_dir }}/zip_purge_yb_logs.sh"

- name: Setup cron to check liveness of {{ yb_process_type }}
  cron:
    name: "Check liveness of {{ yb_process_type }}"
    minute: "*/1"
    user: "{{ user_name }}"
    job: >
      {{ yb_bin_dir }}/yb-server-ctl.sh {{ yb_process_type }} cron-check ||
      {{ yb_bin_dir }}/yb-server-ctl.sh {{ yb_process_type }} start
