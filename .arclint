{
  "exclude": [
     "(\\.l$)",
     "(Makefile$)",
     "(src/yb/common/ql_type.h$)",
     "(\\.sql$)",
     "(\\.txt$)",
     "(^src/postgres/.*$)",
     "(^[.]gitmodules$)",
     "(^managed/src/main/resources/v1.routes$)"
  ],
  "linters": {
    "text": {
      "type": "text",
      "text.max-line-length": 100,
      "exclude": [
        "(^thirdparty/thirdparty_src_checksums[.]txt$)",
        "(^java/yb-client/src/test/java/org/yb/client/TestYBClient[.]java$)",
        "(^cmake_modules/cotire[.]cmake$)",
        "(^cmake_modules/FindBoost[.]cmake$)",
        "(^README[.]md$)",
        "(^java/pom[.]xml$)",
        "(^.*[.]patch$)",
        "(java/yb-cdc/pom.xml)",
        "(java/yb-cdc/README.md)"
      ]
    },
    "pycodestyle": {
      "type": "pep8",
      "include": "(\\.py$)",
      "exclude": "(^thirdparty/|^[.]ycm_extra_conf[.]py$)",
      "bin": "pycodestyle"
    },
    "googlecpplint": {
      "type": "googlecpplint",
      "exclude": [
        "(^src/yb/yql/cql/ql/kwlist[.]h$)",
        "(^src/yb/yql/pggate/if_macros_undef[.]h$)",
        "(^src/yb/yql/pggate/if_macros_cxx_decl[.]h$)",
        "(^src/yb/yql/pggate/if_macros_common[.]h$)",
        "(^src/yb/yql/pggate/if_macros_c_wrapper_common[.]h$)",
        "(^src/yb/yql/pggate/if_macros_c_wrapper_decl[.]h$)",
        "(^src/yb/yql/pggate/if_macros_c_wrapper_impl[.]h$)",
        "(^src/yb/yql/pggate/if_macros_c_pg_wrapper_inl[.]h$)",
        "(^src/yb/yql/pggate/pg_api_example_if[.]h$)",
        "(^src/yb/yql/pggate/pg_txn_manager_if[.]h$)",
        "(^src/yb/yql/pggate/pggate_if[.]h$)"
      ],
      "include": [
        "(\\.cpp$)",
        "(\\.cc$)",
        "(\\.c$)",
        "(\\.hpp$)",
        "(\\.h$)"
      ],
      "cpplint.header_guard_root_dir": "src",
      "cpplint.max_line_length": 100,
      "severity.rules": {
        "(^readability/inheritance$)": "disabled",
        "(^readability/todo$)": "disabled",
        "(^runtime/string$)": "disabled",
        "(^whitespace/parens$)": "disabled",
        "(^whitespace/blank_line$)": "disabled",
        "(^build/include_what_you_use$)": "disabled",
        "(^build/c[+][+]11$)": "disabled",
        "(.*)": "error"
      }
    }
  }
}
