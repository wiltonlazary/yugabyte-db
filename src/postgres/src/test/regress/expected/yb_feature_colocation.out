--
-- Colocation
--
CREATE DATABASE colocation_test colocated = true;
\c colocation_test
-- TODO: This test should be changed once we complete issue #3034
CREATE TABLE foo1 (a INT); -- fail
ERROR:  Invalid argument: Invalid table definition: Error creating table colocation_test.foo1 on the master: Cannot create hash partitioned table in colocated database
CREATE TABLE foo1 (a INT, PRIMARY KEY (a ASC));
CREATE TABLE foo2 (a INT, b INT, PRIMARY KEY (a ASC));
-- opt out of using colocated tablet
CREATE TABLE foo3 (a INT) WITH (colocated = false);
-- multi column primary key table
CREATE TABLE foo4(a INT, b INT, PRIMARY KEY (a ASC, b DESC));
CREATE TABLE foo5 (a INT, PRIMARY KEY (a ASC)) WITH (colocated = true);
INSERT INTO foo1 (a) VALUES (0), (1), (2);
INSERT INTO foo1 (a, b) VALUES (0, '0'); -- fail
ERROR:  column "b" of relation "foo1" does not exist
LINE 1: INSERT INTO foo1 (a, b) VALUES (0, '0');
                             ^
INSERT INTO foo2 (a, b) VALUES (0, '0'), (1, '1');
INSERT INTO foo3 (a) VALUES (0), (1), (2), (3);
INSERT INTO foo4 (a, b) VALUES (0, 0), (0, 1), (1, 0), (1, 1);
INSERT INTO foo5 (a) VALUES (0), (1), (2), (3);
SELECT * FROM foo1;
 a
---
 0
 1
 2
(3 rows)

SELECT * FROM foo1 WHERE a = 2;
 a
---
 2
(1 row)

SELECT * FROM foo1 WHERE n = '0'; -- fail
ERROR:  column "n" does not exist
LINE 1: SELECT * FROM foo1 WHERE n = '0';
                                 ^
SELECT * FROM foo2;
 a | b
---+---
 0 | 0
 1 | 1
(2 rows)

SELECT * FROM foo3 ORDER BY a ASC;
 a
---
 0
 1
 2
 3
(4 rows)

SELECT * FROM foo4;
 a | b
---+---
 0 | 1
 0 | 0
 1 | 1
 1 | 0
(4 rows)

SELECT * FROM foo5;
 a
---
 0
 1
 2
 3
(4 rows)

-- table with index
CREATE TABLE bar1 (a INT, b INT, PRIMARY KEY (a ASC));
CREATE INDEX ON bar1 (a);
INSERT INTO bar1 (a, b) VALUES (0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5);
EXPLAIN SELECT * FROM bar1 WHERE a = 1;
                              QUERY PLAN
-----------------------------------------------------------------------
 Index Scan using bar1_a_idx on bar1  (cost=0.00..4.11 rows=1 width=8)
   Index Cond: (a = 1)
(2 rows)

SELECT * FROM bar1 WHERE a = 1;
 a | b
---+---
 1 | 1
(1 row)

UPDATE bar1 SET b = b + 1 WHERE a > 3;
SELECT * FROM bar1;
 a | b
---+---
 0 | 0
 1 | 1
 2 | 2
 3 | 3
 4 | 5
 5 | 6
(6 rows)

DELETE FROM bar1 WHERE a > 3;
SELECT * FROM bar1;
 a | b
---+---
 0 | 0
 1 | 1
 2 | 2
 3 | 3
(4 rows)

-- colocated table with non-colocated index
CREATE TABLE bar2 (a INT, b INT, PRIMARY KEY (a ASC));
CREATE INDEX ON bar2 (a) WITH (colocated = true);
INSERT INTO bar2 (a, b) VALUES (0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5);
EXPLAIN SELECT * FROM bar2 WHERE a = 1;
                              QUERY PLAN
-----------------------------------------------------------------------
 Index Scan using bar2_a_idx on bar2  (cost=0.00..4.11 rows=1 width=8)
   Index Cond: (a = 1)
(2 rows)

SELECT * FROM bar2 WHERE a = 1;
 a | b
---+---
 1 | 1
(1 row)

UPDATE bar2 SET b = b + 1 WHERE a > 3;
SELECT * FROM bar2;
 a | b
---+---
 0 | 0
 1 | 1
 2 | 2
 3 | 3
 4 | 5
 5 | 6
(6 rows)

DELETE FROM bar2 WHERE a > 3;
SELECT * FROM bar2;
 a | b
---+---
 0 | 0
 1 | 1
 2 | 2
 3 | 3
(4 rows)

-- colocated table with colocated index
CREATE TABLE bar3 (a INT, b INT, PRIMARY KEY (a ASC));
CREATE INDEX ON bar3 (a) WITH (colocated = false);
INSERT INTO bar3 (a, b) VALUES (0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5);
EXPLAIN SELECT * FROM bar3 WHERE a = 1;
                              QUERY PLAN
-----------------------------------------------------------------------
 Index Scan using bar3_a_idx on bar3  (cost=0.00..4.11 rows=1 width=8)
   Index Cond: (a = 1)
(2 rows)

SELECT * FROM bar3 WHERE a = 1;
 a | b
---+---
 1 | 1
(1 row)

UPDATE bar3 SET b = b + 1 WHERE a > 3;
SELECT * FROM bar3;
 a | b
---+---
 0 | 0
 1 | 1
 2 | 2
 3 | 3
 4 | 5
 5 | 6
(6 rows)

DELETE FROM bar3 WHERE a > 3;
SELECT * FROM bar3;
 a | b
---+---
 0 | 0
 1 | 1
 2 | 2
 3 | 3
(4 rows)

