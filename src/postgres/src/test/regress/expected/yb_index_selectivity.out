--
-- INDEX SELECTIVITY
--
--
-- The following queries can use any index depending on cost estimator.
--
EXPLAIN SELECT count(*) FROM airports WHERE iso_region = 'US-CA';
                                        QUERY PLAN
------------------------------------------------------------------------------------------
 Aggregate  (cost=5.06..5.07 rows=1 width=8)
   ->  Index Only Scan using airports_idx2 on airports  (cost=0.00..5.04 rows=10 width=0)
         Index Cond: (iso_region = 'US-CA'::text)
(3 rows)

EXPLAIN SELECT gps_code FROM airports WHERE iso_region = 'US-CA' AND type = 'small_airport'
          ORDER BY ident;
                                   QUERY PLAN
--------------------------------------------------------------------------------
 Index Scan using airports_pkey on airports  (cost=0.00..5.06 rows=10 width=64)
   Index Cond: (iso_region = 'US-CA'::text)
   Filter: (type = 'small_airport'::text)
(3 rows)

EXPLAIN SELECT gps_code FROM airports WHERE iso_region = 'US-CA' AND type = 'small_airport'
          ORDER BY ident LIMIT 1;
                                      QUERY PLAN
--------------------------------------------------------------------------------------
 Limit  (cost=0.00..0.51 rows=1 width=64)
   ->  Index Scan using airports_pkey on airports  (cost=0.00..5.06 rows=10 width=64)
         Index Cond: (iso_region = 'US-CA'::text)
         Filter: (type = 'small_airport'::text)
(4 rows)

--
-- The following query should use PRIMARY KEY index.
--
-- Currently, the first query chooses airports_idx2 incorrectly.  Cost-estimator needs to be fixed.
EXPLAIN SELECT * FROM airports WHERE iso_region = 'US-CA' LIMIT 1;
                                      QUERY PLAN
---------------------------------------------------------------------------------------
 Limit  (cost=0.00..0.50 rows=1 width=356)
   ->  Index Scan using airports_idx2 on airports  (cost=0.00..5.04 rows=10 width=356)
         Index Cond: (iso_region = 'US-CA'::text)
(3 rows)

EXPLAIN SELECT * FROM airports WHERE iso_region = 'US-CA' ORDER BY ident LIMIT 1;
                                      QUERY PLAN
---------------------------------------------------------------------------------------
 Limit  (cost=0.00..0.50 rows=1 width=356)
   ->  Index Scan using airports_pkey on airports  (cost=0.00..5.04 rows=10 width=356)
         Index Cond: (iso_region = 'US-CA'::text)
(3 rows)

EXPLAIN SELECT * FROM airports WHERE iso_region = 'US-CA' ORDER BY ident ASC LIMIT 1;
                                      QUERY PLAN
---------------------------------------------------------------------------------------
 Limit  (cost=0.00..0.50 rows=1 width=356)
   ->  Index Scan using airports_pkey on airports  (cost=0.00..5.04 rows=10 width=356)
         Index Cond: (iso_region = 'US-CA'::text)
(3 rows)

EXPLAIN SELECT * FROM airports  WHERE iso_region = 'US-CA' ORDER BY ident DESC LIMIT 1;
                                           QUERY PLAN
------------------------------------------------------------------------------------------------
 Limit  (cost=0.00..0.50 rows=1 width=356)
   ->  Index Scan Backward using airports_pkey on airports  (cost=0.00..5.04 rows=10 width=356)
         Index Cond: (iso_region = 'US-CA'::text)
(3 rows)

EXPLAIN SELECT * FROM airports WHERE iso_region = 'US-CA' ORDER BY iso_region, ident LIMIT 1;
                                      QUERY PLAN
---------------------------------------------------------------------------------------
 Limit  (cost=0.00..0.50 rows=1 width=356)
   ->  Index Scan using airports_pkey on airports  (cost=0.00..5.04 rows=10 width=356)
         Index Cond: (iso_region = 'US-CA'::text)
(3 rows)

EXPLAIN SELECT gps_code FROM airports WHERE iso_region = 'US-CA' AND ident >= '4' LIMIT 2;
                                     QUERY PLAN
-------------------------------------------------------------------------------------
 Limit  (cost=0.00..4.12 rows=1 width=32)
   ->  Index Scan using airports_pkey on airports  (cost=0.00..4.12 rows=1 width=32)
         Index Cond: ((iso_region = 'US-CA'::text) AND (ident >= '4'::text))
(3 rows)

EXPLAIN SELECT gps_code FROM airports WHERE iso_region = 'US-CA' AND ident < '4' LIMIT 2;
                                     QUERY PLAN
-------------------------------------------------------------------------------------
 Limit  (cost=0.00..4.12 rows=1 width=32)
   ->  Index Scan using airports_pkey on airports  (cost=0.00..4.12 rows=1 width=32)
         Index Cond: ((iso_region = 'US-CA'::text) AND (ident < '4'::text))
(3 rows)

--
-- The following query should use "airports_idx1" index
--
EXPLAIN SELECT gps_code FROM airports WHERE iso_region = 'US-CA' ORDER BY name DESC LIMIT 1;
                                      QUERY PLAN
--------------------------------------------------------------------------------------
 Limit  (cost=0.00..0.50 rows=1 width=64)
   ->  Index Scan using airports_idx1 on airports  (cost=0.00..5.04 rows=10 width=64)
         Index Cond: (iso_region = 'US-CA'::text)
(3 rows)

EXPLAIN SELECT gps_code FROM airports WHERE iso_region = 'US-CA' ORDER BY name ASC LIMIT 1;
                                          QUERY PLAN
-----------------------------------------------------------------------------------------------
 Limit  (cost=0.00..0.50 rows=1 width=64)
   ->  Index Scan Backward using airports_idx1 on airports  (cost=0.00..5.04 rows=10 width=64)
         Index Cond: (iso_region = 'US-CA'::text)
(3 rows)

--
-- The following query should use "airports_idx2" index
--
EXPLAIN SELECT gps_code FROM airports WHERE iso_region = 'US-CA' ORDER BY gps_code ASC LIMIT 1;
                                        QUERY PLAN
-------------------------------------------------------------------------------------------
 Limit  (cost=0.00..0.50 rows=1 width=32)
   ->  Index Only Scan using airports_idx2 on airports  (cost=0.00..5.04 rows=10 width=32)
         Index Cond: (iso_region = 'US-CA'::text)
(3 rows)

EXPLAIN SELECT gps_code FROM airports WHERE iso_region = 'US-CA' ORDER BY gps_code DESC LIMIT 1;
                                             QUERY PLAN
----------------------------------------------------------------------------------------------------
 Limit  (cost=0.00..0.50 rows=1 width=32)
   ->  Index Only Scan Backward using airports_idx2 on airports  (cost=0.00..5.04 rows=10 width=32)
         Index Cond: (iso_region = 'US-CA'::text)
(3 rows)

EXPLAIN SELECT gps_code FROM airports ORDER BY iso_region, gps_code LIMIT 1;
                                          QUERY PLAN
-----------------------------------------------------------------------------------------------
 Limit  (cost=0.00..0.10 rows=1 width=64)
   ->  Index Only Scan using airports_idx2 on airports  (cost=0.00..104.01 rows=1000 width=64)
(2 rows)

EXPLAIN SELECT gps_code FROM airports ORDER BY iso_region ASC, gps_code ASC LIMIT 1;
                                          QUERY PLAN
-----------------------------------------------------------------------------------------------
 Limit  (cost=0.00..0.10 rows=1 width=64)
   ->  Index Only Scan using airports_idx2 on airports  (cost=0.00..104.01 rows=1000 width=64)
(2 rows)

EXPLAIN SELECT gps_code FROM airports ORDER BY iso_region DESC, gps_code DESC LIMIT 1;
                                               QUERY PLAN
--------------------------------------------------------------------------------------------------------
 Limit  (cost=0.00..0.10 rows=1 width=64)
   ->  Index Only Scan Backward using airports_idx2 on airports  (cost=0.00..104.01 rows=1000 width=64)
(2 rows)

--
-- The following query should use "airports_idx3" index
--
EXPLAIN SELECT gps_code FROM airports WHERE iso_region = 'US-CA' AND type = 'small_airport'
          ORDER BY coordinates, ident, name LIMIT 1;
                                         QUERY PLAN
--------------------------------------------------------------------------------------------
 Limit  (cost=0.00..0.51 rows=1 width=128)
   ->  Index Only Scan using airports_idx3 on airports  (cost=0.00..5.06 rows=10 width=128)
         Index Cond: ((iso_region = 'US-CA'::text) AND (type = 'small_airport'::text))
(3 rows)

EXPLAIN SELECT gps_code FROM airports WHERE iso_region = 'US-CA' AND type = 'small_airport'
          ORDER BY coordinates ASC, ident, name LIMIT 1;
                                         QUERY PLAN
--------------------------------------------------------------------------------------------
 Limit  (cost=0.00..0.51 rows=1 width=128)
   ->  Index Only Scan using airports_idx3 on airports  (cost=0.00..5.06 rows=10 width=128)
         Index Cond: ((iso_region = 'US-CA'::text) AND (type = 'small_airport'::text))
(3 rows)

EXPLAIN SELECT gps_code FROM airports WHERE iso_region = 'US-CA' AND type = 'small_airport'
          ORDER BY coordinates DESC, ident DESC, name DESC LIMIT 1;
                                             QUERY PLAN
-----------------------------------------------------------------------------------------------------
 Limit  (cost=0.00..0.51 rows=1 width=128)
   ->  Index Only Scan Backward using airports_idx3 on airports  (cost=0.00..5.06 rows=10 width=128)
         Index Cond: ((iso_region = 'US-CA'::text) AND (type = 'small_airport'::text))
(3 rows)

EXPLAIN SELECT gps_code FROM airports WHERE iso_region = 'US-CA' AND type = 'small_airport'
          ORDER BY coordinates, ident, name ASC LIMIT 1;
                                         QUERY PLAN
--------------------------------------------------------------------------------------------
 Limit  (cost=0.00..0.51 rows=1 width=128)
   ->  Index Only Scan using airports_idx3 on airports  (cost=0.00..5.06 rows=10 width=128)
         Index Cond: ((iso_region = 'US-CA'::text) AND (type = 'small_airport'::text))
(3 rows)

EXPLAIN SELECT gps_code FROM airports WHERE iso_region = 'US-CA' AND type = 'small_airport'
          ORDER BY coordinates, ident LIMIT 1;
                                        QUERY PLAN
-------------------------------------------------------------------------------------------
 Limit  (cost=0.00..0.51 rows=1 width=96)
   ->  Index Only Scan using airports_idx3 on airports  (cost=0.00..5.06 rows=10 width=96)
         Index Cond: ((iso_region = 'US-CA'::text) AND (type = 'small_airport'::text))
(3 rows)

EXPLAIN SELECT gps_code FROM airports WHERE iso_region = 'US-CA' AND type = 'small_airport'
          ORDER BY coordinates LIMIT 1;
                                        QUERY PLAN
-------------------------------------------------------------------------------------------
 Limit  (cost=0.00..0.51 rows=1 width=64)
   ->  Index Only Scan using airports_idx3 on airports  (cost=0.00..5.06 rows=10 width=64)
         Index Cond: ((iso_region = 'US-CA'::text) AND (type = 'small_airport'::text))
(3 rows)

--
-- The following query also use "airports_idx3" index but not fully-covered.
--
EXPLAIN SELECT * FROM airports WHERE iso_region = 'US-CA' AND type = 'small_airport'
          ORDER BY coordinates, ident, name LIMIT 1;
                                      QUERY PLAN
---------------------------------------------------------------------------------------
 Limit  (cost=0.00..0.51 rows=1 width=356)
   ->  Index Scan using airports_idx3 on airports  (cost=0.00..5.06 rows=10 width=356)
         Index Cond: ((iso_region = 'US-CA'::text) AND (type = 'small_airport'::text))
(3 rows)

EXPLAIN SELECT * FROM airports WHERE iso_region = 'US-CA' AND type = 'small_airport'
          ORDER BY coordinates ASC, ident, name LIMIT 1;
                                      QUERY PLAN
---------------------------------------------------------------------------------------
 Limit  (cost=0.00..0.51 rows=1 width=356)
   ->  Index Scan using airports_idx3 on airports  (cost=0.00..5.06 rows=10 width=356)
         Index Cond: ((iso_region = 'US-CA'::text) AND (type = 'small_airport'::text))
(3 rows)

EXPLAIN SELECT * FROM airports WHERE iso_region = 'US-CA' AND type = 'small_airport'
          ORDER BY coordinates DESC, ident DESC, name DESC LIMIT 1;
                                           QUERY PLAN
------------------------------------------------------------------------------------------------
 Limit  (cost=0.00..0.51 rows=1 width=356)
   ->  Index Scan Backward using airports_idx3 on airports  (cost=0.00..5.06 rows=10 width=356)
         Index Cond: ((iso_region = 'US-CA'::text) AND (type = 'small_airport'::text))
(3 rows)

EXPLAIN SELECT * FROM airports WHERE iso_region = 'US-CA' AND type = 'small_airport'
          ORDER BY coordinates, ident, name ASC LIMIT 1;
                                      QUERY PLAN
---------------------------------------------------------------------------------------
 Limit  (cost=0.00..0.51 rows=1 width=356)
   ->  Index Scan using airports_idx3 on airports  (cost=0.00..5.06 rows=10 width=356)
         Index Cond: ((iso_region = 'US-CA'::text) AND (type = 'small_airport'::text))
(3 rows)

EXPLAIN SELECT * FROM airports WHERE iso_region = 'US-CA' AND type = 'small_airport'
          ORDER BY coordinates, ident LIMIT 1;
                                      QUERY PLAN
---------------------------------------------------------------------------------------
 Limit  (cost=0.00..0.51 rows=1 width=356)
   ->  Index Scan using airports_idx3 on airports  (cost=0.00..5.06 rows=10 width=356)
         Index Cond: ((iso_region = 'US-CA'::text) AND (type = 'small_airport'::text))
(3 rows)

EXPLAIN SELECT * FROM airports WHERE iso_region = 'US-CA' AND type = 'small_airport'
          ORDER BY coordinates LIMIT 1;
                                      QUERY PLAN
---------------------------------------------------------------------------------------
 Limit  (cost=0.00..0.51 rows=1 width=356)
   ->  Index Scan using airports_idx3 on airports  (cost=0.00..5.06 rows=10 width=356)
         Index Cond: ((iso_region = 'US-CA'::text) AND (type = 'small_airport'::text))
(3 rows)

--
-- The following query should use "airports_idx3" index without LIMIT.
--
EXPLAIN SELECT gps_code FROM airports WHERE iso_region = 'US-CA' AND type = 'small_airport'
          ORDER BY coordinates, ident, name;
                                      QUERY PLAN
--------------------------------------------------------------------------------------
 Index Only Scan using airports_idx3 on airports  (cost=0.00..5.06 rows=10 width=128)
   Index Cond: ((iso_region = 'US-CA'::text) AND (type = 'small_airport'::text))
(2 rows)

EXPLAIN SELECT gps_code FROM airports WHERE iso_region = 'US-CA' AND type = 'small_airport'
          ORDER BY coordinates, ident;
                                     QUERY PLAN
-------------------------------------------------------------------------------------
 Index Only Scan using airports_idx3 on airports  (cost=0.00..5.06 rows=10 width=96)
   Index Cond: ((iso_region = 'US-CA'::text) AND (type = 'small_airport'::text))
(2 rows)

EXPLAIN SELECT gps_code FROM airports WHERE iso_region = 'US-CA' AND type = 'small_airport'
          ORDER BY coordinates;
                                     QUERY PLAN
-------------------------------------------------------------------------------------
 Index Only Scan using airports_idx3 on airports  (cost=0.00..5.06 rows=10 width=64)
   Index Cond: ((iso_region = 'US-CA'::text) AND (type = 'small_airport'::text))
(2 rows)

--
-- The following query should use "airports_idx3" index but not fully-covered and no LIMIT.
--
EXPLAIN SELECT * FROM airports WHERE iso_region = 'US-CA' AND type = 'small_airport'
          ORDER BY coordinates, ident, name;
                                   QUERY PLAN
---------------------------------------------------------------------------------
 Index Scan using airports_idx3 on airports  (cost=0.00..5.06 rows=10 width=356)
   Index Cond: ((iso_region = 'US-CA'::text) AND (type = 'small_airport'::text))
(2 rows)

EXPLAIN SELECT * FROM airports WHERE iso_region = 'US-CA' AND type = 'small_airport'
          ORDER BY coordinates, ident;
                                   QUERY PLAN
---------------------------------------------------------------------------------
 Index Scan using airports_idx3 on airports  (cost=0.00..5.06 rows=10 width=356)
   Index Cond: ((iso_region = 'US-CA'::text) AND (type = 'small_airport'::text))
(2 rows)

EXPLAIN SELECT * FROM airports WHERE iso_region = 'US-CA' AND type = 'small_airport'
          ORDER BY coordinates;
                                   QUERY PLAN
---------------------------------------------------------------------------------
 Index Scan using airports_idx3 on airports  (cost=0.00..5.06 rows=10 width=356)
   Index Cond: ((iso_region = 'US-CA'::text) AND (type = 'small_airport'::text))
(2 rows)

--
-- The following queries cannot be optimized. Either WHERE clause is missing or its given filter
-- cannot be optimized.
--
-- No where clause
EXPLAIN SELECT gps_code FROM airports;
                            QUERY PLAN
------------------------------------------------------------------
 Foreign Scan on airports  (cost=0.00..100.00 rows=1000 width=32)
(1 row)

-- Use '!=' on hash column.
EXPLAIN SELECT gps_code FROM airports WHERE iso_region != 'US-CA';
                            QUERY PLAN
------------------------------------------------------------------
 Foreign Scan on airports  (cost=0.00..102.50 rows=1000 width=32)
   Filter: (iso_region <> 'US-CA'::text)
(2 rows)

-- ORDER BY hash column.
EXPLAIN SELECT gps_code FROM airports WHERE iso_region = 'US-CA' ORDER BY type, coordinates;
                                      QUERY PLAN
--------------------------------------------------------------------------------------
 Sort  (cost=5.20..5.23 rows=10 width=96)
   Sort Key: type, coordinates
   ->  Index Scan using airports_idx2 on airports  (cost=0.00..5.04 rows=10 width=96)
         Index Cond: (iso_region = 'US-CA'::text)
(4 rows)

-- ORDER BY in wrong direction.
EXPLAIN SELECT gps_code FROM airports ORDER BY iso_region ASC, gps_code DESC LIMIT 1;
                                  QUERY PLAN
------------------------------------------------------------------------------
 Limit  (cost=105.00..105.00 rows=1 width=64)
   ->  Sort  (cost=105.00..107.50 rows=1000 width=64)
         Sort Key: iso_region, gps_code DESC
         ->  Foreign Scan on airports  (cost=0.00..100.00 rows=1000 width=64)
(4 rows)

EXPLAIN SELECT gps_code FROM airports WHERE iso_region = 'US-CA' AND type = 'small_airport'
          ORDER BY coordinates DESC, ident, name LIMIT 1;
                                            QUERY PLAN
--------------------------------------------------------------------------------------------------
 Limit  (cost=5.11..5.11 rows=1 width=128)
   ->  Sort  (cost=5.11..5.14 rows=10 width=128)
         Sort Key: coordinates DESC, ident, name
         ->  Index Only Scan using airports_idx3 on airports  (cost=0.00..5.06 rows=10 width=128)
               Index Cond: ((iso_region = 'US-CA'::text) AND (type = 'small_airport'::text))
(5 rows)

EXPLAIN SELECT gps_code FROM airports WHERE iso_region = 'US-CA' AND type = 'small_airport'
          ORDER BY coordinates, ident, name DESC LIMIT 1;
                                            QUERY PLAN
--------------------------------------------------------------------------------------------------
 Limit  (cost=5.11..5.11 rows=1 width=128)
   ->  Sort  (cost=5.11..5.14 rows=10 width=128)
         Sort Key: coordinates, ident, name DESC
         ->  Index Only Scan using airports_idx3 on airports  (cost=0.00..5.06 rows=10 width=128)
               Index Cond: ((iso_region = 'US-CA'::text) AND (type = 'small_airport'::text))
(5 rows)

-- HASH column is not completely specified while ordering by RANGE column
EXPLAIN SELECT gps_code FROM airports WHERE iso_region = 'US-CA'
          ORDER BY type, coordinates LIMIT 1;
                                         QUERY PLAN
--------------------------------------------------------------------------------------------
 Limit  (cost=5.08..5.09 rows=1 width=96)
   ->  Sort  (cost=5.08..5.11 rows=10 width=96)
         Sort Key: type, coordinates
         ->  Index Scan using airports_idx2 on airports  (cost=0.00..5.04 rows=10 width=96)
               Index Cond: (iso_region = 'US-CA'::text)
(5 rows)
